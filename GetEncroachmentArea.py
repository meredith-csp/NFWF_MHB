# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# GetEncroachmentArea.py
# Created on: 2018-05-01 10:34:05.00000
#   (generated by ArcGIS/ModelBuilder)
# Description: 
# ---------------------------------------------------------------------------

# Set the necessary product code
# import arcinfo

# Import arcpy module
import arcpy

# Check out any necessary licenses
arcpy.CheckOutExtension("spatial")

# Set Geoprocessing environments
arcpy.env.workspace = "E:\\Projects\\NFWF_IntegratedLI\\data\\working\\NLCD"
arcpy.env.overwriteOutput = True

NLCD_MHB = "E:\\Projects\\NFWF_IntegratedLI\\data\\source\\NLCD\\NLCD_2011_MHB.tif"
arcpy.env.snapRaster = NLCD_MHB
arcpy.env.extent = NLCD_MHB

# Function: get potential encroachment area 
def getEncroachArea(encrType,encrVals,bufferDist,impVals,impType):
    arcpy.gp.Reclassify_sa(NLCD_MHB, "Value", encrVals, encrType + "_mhb.tif", "NODATA")
    arcpy.RasterToPolygon_conversion(encrType + "_mhb.tif", encrType + "_poly_mhb.shp", "SIMPLIFY", "VALUE")
    arcpy.PolygonToLine_management(encrType + "_poly_mhb.shp", encrType + "_edge_mhb.shp", "IGNORE_NEIGHBORS")
    arcpy.Buffer_analysis(encrType + "_edge_mhb.shp", encrType + "_" + bufferDist + "m_edge_mhb.shp", bufferDist + " Meters", "FULL", "ROUND", "ALL", "")
    arcpy.gp.ExtractByMask_sa(NLCD_MHB, encrType + "_" + bufferDist + "m_edge_mhb.shp", "nlcd_" + encrType + "_" + bufferDist + "m.tif")
    arcpy.gp.Reclassify_sa("nlcd_" + encrType + "_" + bufferDist + "m.tif", "VALUE", impVals, impType + "_encroach_" + bufferDist + "m.tif", "NODATA")

# Variable definitions:
encrType = ("conif","conifshrub")
encrVals = ("42 43 1", "42 43 1; 51 52 1")
impVals = ("51 52 1","71 1")
impType = ("shrub","grass")
bufferDist = "500"

for i in range(0,len(encrType)):
    
    getEncroachArea(encrType = encrType[i],encrVals = encrVals[i], bufferDist = bufferDist,impVals = impVals[i],impType = impType[i])
